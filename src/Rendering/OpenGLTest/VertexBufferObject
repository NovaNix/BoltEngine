package OpenGLTest;

public class VertexBufferObject implements Renderable
{

	float[] Verticies;
	float[] TextureVerticies;
        
	int[] Indicies;

	public VertexBufferObject(Polygon Poly)
	{
        	GenerateVBO(Poly);
	}
	
	private void GenerateVBO(Polygon Poly)
	{
		
	}
	
	private Vector2f[] GenerateTexCoords(Polygon Poly)
	{
				
		Vector2f[] PolygonCorners;

		Vector2f BottemLeft;
		Vector2f TopRight;
			
		float PolygonWidth;
		float PolygonHeight;
		
		Vector2f[] TexCoords = new Vector2f[PolygonCorners.length];
		
		for (int i = 0; i < PolygonCorners.length; i++)
		{
			Vector2f Point = PolygonCorners[i].Derive();
			
			Point.Subtract(BottemLeft);
			
			Point.Divide(new Vector2f(Width, Height));
			
			TexCoords[i] = Point;
		}
		
		return TexCoords;
	}
	
	public float[] GetVerticies()
	{
		return null;
	}
	
	public float[] GetTextureVerticies()
	{
		return TextureVerticies;
	}
	
	public int[] GetIndicies()
	{
		return Indicies;
	}
	
	@Override
	public void Render()
	{

	}

}
